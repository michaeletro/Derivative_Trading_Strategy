import { TRolloverTooltipDataTemplate } from "../../../ChartModifiers/RolloverModifier";
import { SeriesInfo } from "../../../Model/ChartData/SeriesInfo";
import { RolloverMarkerSvgAnnotation } from "../../Annotations/RolloverMarkerSvgAnnotation";
import { RolloverTooltipSvgAnnotation } from "../../Annotations/RolloverTooltipSvgAnnotation";
import { IRenderableSeries } from "../IRenderableSeries";
import { EMousePosition } from "../../../../types/MousePosition";
export declare type TRolloverTooltipSvgTemplate = (id: string, seriesInfo: SeriesInfo, rolloverTooltip: RolloverTooltipSvgAnnotation) => string;
export interface IRolloverModifier {
    getMousePosition: () => EMousePosition;
    tooltipDataTemplate: TRolloverTooltipDataTemplate;
}
export declare class RolloverModifierRenderableSeriesProps {
    static copy(from: RolloverModifierRenderableSeriesProps, to: RolloverModifierRenderableSeriesProps): void;
    tooltip: RolloverTooltipSvgAnnotation;
    marker: RolloverMarkerSvgAnnotation;
    width: number;
    height: number;
    tooltipLabelX: string;
    tooltipLabelY: string;
    tooltipTemplate: TRolloverTooltipSvgTemplate;
    tooltipLegendOffsetX: number;
    tooltipLegendOffsetY: number;
    rolloverModifier: IRolloverModifier;
    renderableSeries: IRenderableSeries;
    private tooltipLegendTemplateProperty;
    private invalidateParentCallback;
    private showsRolloverProperty;
    private tooltipColorProperty;
    private tooltipTextColorProperty;
    private tooltipTitleProperty;
    private markerColorProperty;
    private shadowColorProperty;
    private tooltipDataTemplateProperty?;
    private isY1;
    constructor(renderableSeries: IRenderableSeries, isY1?: boolean);
    setInvalidateParentCallback(callback: () => void): void;
    get showRollover(): boolean;
    set showRollover(value: boolean);
    get tooltipColor(): string;
    set tooltipColor(value: string);
    get tooltipTextColor(): string;
    set tooltipTextColor(value: string);
    get tooltipTitle(): string;
    set tooltipTitle(value: string);
    get markerColor(): string;
    set markerColor(value: string);
    get shadowColor(): string;
    set shadowColor(value: string);
    get tooltipDataTemplate(): TRolloverTooltipDataTemplate;
    set tooltipDataTemplate(value: TRolloverTooltipDataTemplate);
    get tooltipLegendTemplate(): (tooltipProps: RolloverModifierRenderableSeriesProps, seriesInfo: SeriesInfo) => string;
    set tooltipLegendTemplate(value: (tooltipProps: RolloverModifierRenderableSeriesProps, seriesInfo: SeriesInfo) => string);
    delete(): void;
    protected notifyPropertyChanged<T>(propertyName: string): void;
    private getRenderableSeriesStroke;
}
